<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='netflix_titles_processes (netflix_titles_processes)' inline='true' name='federated.1rwtq0d0cvmlzm16mz0mo1drae6p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='netflix_titles' name='excel-direct.11odxep1222dxe14mc8fc0x2pkjc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Portfolio/Netflix Title/netflix_titles_processes.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.11odxep1222dxe14mc8fc0x2pkjc' name='netflix_titles_processes' table='[netflix_titles_processes$]' type='table'>
          <columns gridOrigin='A1:L8808:no:A1:L8808:0' header='yes' outcome='2'>
            <column datatype='string' name='show_id' ordinal='0' />
            <column datatype='string' name='type' ordinal='1' />
            <column datatype='string' name='title' ordinal='2' />
            <column datatype='string' name='director' ordinal='3' />
            <column datatype='string' name='cast' ordinal='4' />
            <column datatype='string' name='country' ordinal='5' />
            <column datatype='date' name='date_added' ordinal='6' />
            <column datatype='integer' name='release_year' ordinal='7' />
            <column datatype='string' name='rating' ordinal='8' />
            <column datatype='string' name='duration' ordinal='9' />
            <column datatype='string' name='listed_in' ordinal='10' />
            <column datatype='string' name='description' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.11odxep1222dxe14mc8fc0x2pkjc' name='netflix_titles_processes' table='[netflix_titles_processes$]' type='table'>
          <columns gridOrigin='A1:L8808:no:A1:L8808:0' header='yes' outcome='2'>
            <column datatype='string' name='show_id' ordinal='0' />
            <column datatype='string' name='type' ordinal='1' />
            <column datatype='string' name='title' ordinal='2' />
            <column datatype='string' name='director' ordinal='3' />
            <column datatype='string' name='cast' ordinal='4' />
            <column datatype='string' name='country' ordinal='5' />
            <column datatype='date' name='date_added' ordinal='6' />
            <column datatype='integer' name='release_year' ordinal='7' />
            <column datatype='string' name='rating' ordinal='8' />
            <column datatype='string' name='duration' ordinal='9' />
            <column datatype='string' name='listed_in' ordinal='10' />
            <column datatype='string' name='description' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles_processes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L8808:no:A1:L8808:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[show_id]</local-name>
            <parent-name>[netflix_titles_processes]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[netflix_titles_processes]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[netflix_titles_processes]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>director</remote-name>
            <remote-type>130</remote-type>
            <local-name>[director]</local-name>
            <parent-name>[netflix_titles_processes]</parent-name>
            <remote-alias>director</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cast</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cast]</local-name>
            <parent-name>[netflix_titles_processes]</parent-name>
            <remote-alias>cast</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[netflix_titles_processes]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_added</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_added]</local-name>
            <parent-name>[netflix_titles_processes]</parent-name>
            <remote-alias>date_added</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[release_year]</local-name>
            <parent-name>[netflix_titles_processes]</parent-name>
            <remote-alias>release_year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[netflix_titles_processes]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>130</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[netflix_titles_processes]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listed_in</remote-name>
            <remote-type>130</remote-type>
            <local-name>[listed_in]</local-name>
            <parent-name>[netflix_titles_processes]</parent-name>
            <remote-alias>listed_in</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[netflix_titles_processes]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[country]' new-bin='true'>
          <bin default-name='false' value='&quot;Africa&quot;'>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Mauritius&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;America&quot;'>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;United States&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Venezuela&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Asia&quot;'>
            <value>&quot; South Korea&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;China&quot;</value>
            <value>&quot;Hong Kong&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Palestine&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;South Korea&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Taiwan&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;Vietnam&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Europe&quot;'>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Soviet Union&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
            <value>&quot;West Germany&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='netflix_titles_processes' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' role='measure' type='quantitative' />
      <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Date Added' datatype='date' name='[date_added]' role='dimension' type='ordinal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
      <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
      <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
      <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
      <column caption='Show Id' datatype='string' name='[show_id]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[type]' derivation='Count' name='[cnt:type:ok]' pivot='key' type='ordinal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country (group),Country)' hidden='true' name='[Action (Country (group),Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country (group)]' />
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Type)' hidden='true' name='[Action (Country,Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[type]' />
        </groupfilter>
      </group>
      <group caption='Action (Description)' hidden='true' name='[Action (Description)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[description]' />
        </groupfilter>
      </group>
      <group caption='Action (Type)' hidden='true' name='[Action (Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[type]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country'>
          <field>[country]</field>
          <field>[Country (group)]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='ordinal' measure-ordering='ordinal' rowDisplayCount='100' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Country (group)]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;America&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:type:ok]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>847</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>2364</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>3211</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>1008</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>927</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>391</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>628</bucket>
            </map>
            <map to='#b7153a'>
              <bucket>440</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>382</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>627</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>271</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>187</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>259</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>174</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>148</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>212</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>129</bucket>
            </map>
            <map to='#c51e3b'>
              <bucket>164</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>211</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>98</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>181</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>87</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>134</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>86</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>117</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>70</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>112</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>83</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>111</bucket>
            </map>
            <map to='#da313f'>
              <bucket>64</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>81</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>103</bucket>
            </map>
            <map to='#e03841'>
              <bucket>78</bucket>
            </map>
            <map to='#e03841'>
              <bucket>100</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>52</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>77</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>96</bucket>
            </map>
            <map to='#e54144'>
              <bucket>85</bucket>
            </map>
            <map to='#e74646'>
              <bucket>84</bucket>
            </map>
            <map to='#e84746'>
              <bucket>61</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>80</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>59</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>79</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>56</bucket>
            </map>
            <map to='#ed554b'>
              <bucket>76</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>48</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>67</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>47</bucket>
            </map>
            <map to='#f05e4e'>
              <bucket>25</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>65</bucket>
            </map>
            <map to='#f26250'>
              <bucket>246</bucket>
            </map>
            <map to='#f26250'>
              <bucket>831</bucket>
            </map>
            <map to='#f26451'>
              <bucket>41</bucket>
            </map>
            <map to='#f36654'>
              <bucket>35</bucket>
            </map>
            <map to='#f36855'>
              <bucket>40</bucket>
            </map>
            <map to='#f46d59'>
              <bucket>30</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>28</bucket>
            </map>
            <map to='#f67561'>
              <bucket>20</bucket>
            </map>
            <map to='#f67561'>
              <bucket>24</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>23</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>14</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>22</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>21</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>16</bucket>
            </map>
            <map to='#f98870'>
              <bucket>19</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>15</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>18</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>12</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>17</bucket>
            </map>
            <map to='#fb957f'>
              <bucket>11</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>10</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>9</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>8</bucket>
            </map>
            <map to='#fda594'>
              <bucket>7</bucket>
            </map>
            <map to='#fda999'>
              <bucket>6</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>5</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>4</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>3</bucket>
            </map>
            <map to='#feb9ad'>
              <bucket>2</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#a30000'>
              <bucket>&quot;TV Show&quot;</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;Movie&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='show_id' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='title' />
        <field-sort-custom-order field='director' />
        <field-sort-custom-order field='cast' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='date_added' />
        <field-sort-custom-order field='release_year' />
        <field-sort-custom-order field='rating' />
        <field-sort-custom-order field='duration' />
        <field-sort-custom-order field='listed_in' />
        <field-sort-custom-order field='description' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='netflix_titles_processes' id='netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269'>
            <properties context=''>
              <relation connection='excel-direct.11odxep1222dxe14mc8fc0x2pkjc' name='netflix_titles_processes' table='[netflix_titles_processes$]' type='table'>
                <columns gridOrigin='A1:L8808:no:A1:L8808:0' header='yes' outcome='2'>
                  <column datatype='string' name='show_id' ordinal='0' />
                  <column datatype='string' name='type' ordinal='1' />
                  <column datatype='string' name='title' ordinal='2' />
                  <column datatype='string' name='director' ordinal='3' />
                  <column datatype='string' name='cast' ordinal='4' />
                  <column datatype='string' name='country' ordinal='5' />
                  <column datatype='date' name='date_added' ordinal='6' />
                  <column datatype='integer' name='release_year' ordinal='7' />
                  <column datatype='string' name='rating' ordinal='8' />
                  <column datatype='string' name='duration' ordinal='9' />
                  <column datatype='string' name='listed_in' ordinal='10' />
                  <column datatype='string' name='description' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_7137BF99F87A45248990D7247EF04DA4]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Number of Movies per Countries' />
      <command command='tsc:brush'>
        <param name='field-captions' value='CNT(Type)' />
        <param name='target' value='Number of Movies per Countries' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_593A2E647FA84EBC8473085DB40947B7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Number of Movies per Countries' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_B39DC851E49342D6A735F8BC4A775E98]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Type' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cast'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles_processes (netflix_titles_processes)' name='federated.1rwtq0d0cvmlzm16mz0mo1drae6p' />
          </datasources>
          <datasource-dependencies datasource='federated.1rwtq0d0cvmlzm16mz0mo1drae6p'>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[country]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot; South Korea&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Soviet Union&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;West Germany&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[cast]' derivation='None' name='[none:cast:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_593A2E647FA84EBC8473085DB40947B7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;5CM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#f2f2f2' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' data-class='total' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' value='center' />
            <format attr='vertical-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:cast:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A52E337A-03F8-437A-B6E0-174A214300AD}' />
    </worksheet>
    <worksheet name='Description'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles_processes (netflix_titles_processes)' name='federated.1rwtq0d0cvmlzm16mz0mo1drae6p' />
          </datasources>
          <datasource-dependencies datasource='federated.1rwtq0d0cvmlzm16mz0mo1drae6p'>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[country]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot; South Korea&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Soviet Union&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;West Germany&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_593A2E647FA84EBC8473085DB40947B7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;5CM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#f2f2f2' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' data-class='total' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' value='center' />
            <format attr='vertical-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' value='Title'>
              <formatted-text>
                <run fontalignment='1' fontsize='10'>Title</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:description:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{56AA30D7-B641-4F24-BD09-27B83CBC4A38}' />
    </worksheet>
    <worksheet name='Director'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles_processes (netflix_titles_processes)' name='federated.1rwtq0d0cvmlzm16mz0mo1drae6p' />
          </datasources>
          <datasource-dependencies datasource='federated.1rwtq0d0cvmlzm16mz0mo1drae6p'>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[country]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot; South Korea&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Soviet Union&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;West Germany&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
            <column-instance column='[director]' derivation='None' name='[none:director:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_593A2E647FA84EBC8473085DB40947B7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;5CM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#f2f2f2' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' data-class='total' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' value='center' />
            <format attr='vertical-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:director:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F4273638-60D2-49C9-A257-BAC6E409CBBA}' />
    </worksheet>
    <worksheet name='Duration'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles_processes (netflix_titles_processes)' name='federated.1rwtq0d0cvmlzm16mz0mo1drae6p' />
          </datasources>
          <datasource-dependencies datasource='federated.1rwtq0d0cvmlzm16mz0mo1drae6p'>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[country]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot; South Korea&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Soviet Union&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;West Germany&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
            <column-instance column='[duration]' derivation='None' name='[none:duration:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_593A2E647FA84EBC8473085DB40947B7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;5CM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#f2f2f2' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' data-class='total' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' value='center' />
            <format attr='vertical-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:duration:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EAFF0813-6ECA-4BCE-AFBE-FE06BE35604A}' />
    </worksheet>
    <worksheet name='Number of Movies per Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004' fontname='Tableau Semibold'>Number of Movies &amp; TV Shows by Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles_processes (netflix_titles_processes)' name='federated.1rwtq0d0cvmlzm16mz0mo1drae6p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rwtq0d0cvmlzm16mz0mo1drae6p'>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[country]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot; South Korea&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Soviet Union&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;West Germany&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[type]' derivation='Count' name='[cnt:type:ok]' pivot='key' type='ordinal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_593A2E647FA84EBC8473085DB40947B7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Type)]'>
            <groupfilter function='level-members' level='[type]' user:ui-action-filter='[Action3_B39DC851E49342D6A735F8BC4A775E98]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;5CM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]'>
            <groupfilter function='level-members' level='[none:type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Country (group)]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:country:nk]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Type)]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Longitude (generated)]' field-type='quantitative' max='21132345.090291545' min='-17405121.936166082' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Latitude (generated)]' field-type='quantitative' max='16289971.131968912' min='-4202729.8368843645' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Longitude (generated)]' value='false' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' value='Type'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Semibold' fontsize='10'>Type</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Country (group)]' value='Continent'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='10'>Continent</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[cnt:type:ok]' />
              <color column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[cnt:type:ok]' />
              <lod column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:country:nk]' />
              <lod column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Country (group)]' />
              <geometry column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Latitude (generated)]</rows>
        <cols>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F1347FA2-0CA8-4BB1-9062-74BA4CE70FC1}' />
    </worksheet>
    <worksheet name='Number of Titles over the Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004' fontname='Tableau Semibold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles_processes (netflix_titles_processes)' name='federated.1rwtq0d0cvmlzm16mz0mo1drae6p' />
          </datasources>
          <datasource-dependencies datasource='federated.1rwtq0d0cvmlzm16mz0mo1drae6p'>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[country]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot; South Korea&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Soviet Union&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;West Germany&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='netflix_titles_processes' datatype='integer' name='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='netflix_titles_processes' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[release_year]' derivation='None' name='[none:release_year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_593A2E647FA84EBC8473085DB40947B7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Type)]'>
            <groupfilter function='level-members' level='[type]' user:ui-action-filter='[Action3_B39DC851E49342D6A735F8BC4A775E98]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;TV Show&quot;</bucket>
              <bucket>&quot;Movie&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:country:nk]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:release_year:qk]' field-type='quantitative' max='2037' min='1923' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' field-type='quantitative' max='894' min='-20' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='line-visibility' id='refline3' value='on' />
            <format attr='line-pattern-only' id='refline3' value='dashed' />
            <format attr='stroke-color' id='refline3' value='#f17b79a0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#f2f2f220' />
            <format attr='stroke-color' scope='cols' value='#f2f2f232' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='background-color' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' id='legend-color' value='#000000' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' value='Type'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Semibold'>Type</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:release_year:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0' value-column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:release_year:qk]' z-order='1' />
            <reference-line axis-column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:release_year:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='none' scope='per-table' value='0' value-column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:release_year:qk]' z-order='2' />
            <reference-line axis-column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' enable-instant-analytics='true' formula='total' id='refline2' label-type='automatic' scope='per-pane' value-column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' z-order='3' />
            <reference-line axis-column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:release_year:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label='' label-type='custom' scope='per-table' value='2011' value-column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:release_year:qk]' z-order='4' />
            <reference-line axis-column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' enable-instant-analytics='true' formula='average' id='refline5' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' z-order='5' />
          </pane>
        </panes>
        <rows>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]</rows>
        <cols>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:release_year:qk]</cols>
      </table>
      <simple-id uuid='{D06574E7-0026-4649-9BAA-72CDB21FD52F}' />
    </worksheet>
    <worksheet name='Release Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles_processes (netflix_titles_processes)' name='federated.1rwtq0d0cvmlzm16mz0mo1drae6p' />
          </datasources>
          <datasource-dependencies datasource='federated.1rwtq0d0cvmlzm16mz0mo1drae6p'>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[country]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot; South Korea&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Soviet Union&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;West Germany&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[release_year]' derivation='None' name='[none:release_year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_593A2E647FA84EBC8473085DB40947B7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;5CM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#f2f2f2' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' data-class='total' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' value='center' />
            <format attr='vertical-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:release_year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{68CD972C-3B4B-47B4-B12F-11FA6175D623}' />
    </worksheet>
    <worksheet name='Top 5 Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004' fontname='Tableau Semibold'>Top 5 Country Based on Number of Titles</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles_processes (netflix_titles_processes)' name='federated.1rwtq0d0cvmlzm16mz0mo1drae6p' />
          </datasources>
          <datasource-dependencies datasource='federated.1rwtq0d0cvmlzm16mz0mo1drae6p'>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[country]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot; South Korea&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Soviet Union&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;West Germany&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='netflix_titles_processes' datatype='integer' name='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='netflix_titles_processes' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' role='measure' type='quantitative' />
            <column-instance column='[type]' derivation='Count' name='[cnt:type:ok]' pivot='key' type='ordinal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_593A2E647FA84EBC8473085DB40947B7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Type)]'>
            <groupfilter function='level-members' level='[type]' user:ui-action-filter='[Action3_B39DC851E49342D6A735F8BC4A775E98]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([country])' function='order' user:ui-marker='order'>
                <groupfilter expression='COUNT([country]) &gt;= 50' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]'>
            <groupfilter function='level-members' level='[none:type:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:country:nk]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' field-type='quantitative' max='3427' range-type='fixedmax' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' scope='cols' value='Count of Titles' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#f2f2f220' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='background-color' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' id='legend-color' value='#000000' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' />
              <lod column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[cnt:type:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:country:nk]</rows>
        <cols>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]</cols>
      </table>
      <simple-id uuid='{B3E18E82-187C-4AEB-A8A4-71190C528D65}' />
    </worksheet>
    <worksheet name='Top 5 Rating'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004' fontname='Tableau Semibold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles_processes (netflix_titles_processes)' name='federated.1rwtq0d0cvmlzm16mz0mo1drae6p' />
          </datasources>
          <datasource-dependencies datasource='federated.1rwtq0d0cvmlzm16mz0mo1drae6p'>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[country]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot; South Korea&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Soviet Union&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;West Germany&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='netflix_titles_processes' datatype='integer' name='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='netflix_titles_processes' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_593A2E647FA84EBC8473085DB40947B7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Type)]'>
            <groupfilter function='level-members' level='[type]' user:ui-action-filter='[Action3_B39DC851E49342D6A735F8BC4A775E98]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:rating:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:rating:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;5CM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:rating:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:rating:nk]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Type)]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' scope='cols' value='Count of Titles' />
            <encoding attr='space' class='0' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' field-type='quantitative' max='3500' min='0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e10004' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:rating:nk]</rows>
        <cols>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]</cols>
      </table>
      <simple-id uuid='{AC36ADE7-0EC2-4F6A-A7DA-12E8E0438753}' />
    </worksheet>
    <worksheet name='Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004' fontname='Tableau Semibold'>Number of TV Show and Movies</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles_processes (netflix_titles_processes)' name='federated.1rwtq0d0cvmlzm16mz0mo1drae6p' />
          </datasources>
          <datasource-dependencies datasource='federated.1rwtq0d0cvmlzm16mz0mo1drae6p'>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[country]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot; South Korea&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Soviet Union&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;West Germany&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='netflix_titles_processes' datatype='integer' name='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='netflix_titles_processes' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_593A2E647FA84EBC8473085DB40947B7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;5CM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]'>
            <groupfilter function='level-members' level='[none:type:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Action (Country (group),Country)]</column>
            <column>[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='564' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' data-class='total' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[pcto:cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' />
              <text column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' />
              <text column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' />
              <text column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[pcto:cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' />
              <color column='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5178D11A-D4D1-4CD4-B038-502DA8A90824}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Semibold' fontsize='22'>Netflix Title Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='netflix_titles_processes (netflix_titles_processes)' name='federated.1rwtq0d0cvmlzm16mz0mo1drae6p' />
      </datasources>
      <datasource-dependencies datasource='federated.1rwtq0d0cvmlzm16mz0mo1drae6p'>
        <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[country]' new-bin='true'>
            <bin default-name='false' value='&quot;Africa&quot;'>
              <value>&quot;Cameroon&quot;</value>
              <value>&quot;Egypt&quot;</value>
              <value>&quot;Ghana&quot;</value>
              <value>&quot;Kenya&quot;</value>
              <value>&quot;Mauritius&quot;</value>
              <value>&quot;Mozambique&quot;</value>
              <value>&quot;Namibia&quot;</value>
              <value>&quot;Nigeria&quot;</value>
              <value>&quot;Senegal&quot;</value>
              <value>&quot;Somalia&quot;</value>
              <value>&quot;South Africa&quot;</value>
              <value>&quot;Zimbabwe&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;America&quot;'>
              <value>&quot;Argentina&quot;</value>
              <value>&quot;Brazil&quot;</value>
              <value>&quot;Canada&quot;</value>
              <value>&quot;Colombia&quot;</value>
              <value>&quot;Guatemala&quot;</value>
              <value>&quot;Jamaica&quot;</value>
              <value>&quot;Mexico&quot;</value>
              <value>&quot;Paraguay&quot;</value>
              <value>&quot;Peru&quot;</value>
              <value>&quot;Puerto Rico&quot;</value>
              <value>&quot;United States&quot;</value>
              <value>&quot;Uruguay&quot;</value>
              <value>&quot;Venezuela&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Asia&quot;'>
              <value>&quot; South Korea&quot;</value>
              <value>&quot;Australia&quot;</value>
              <value>&quot;Bangladesh&quot;</value>
              <value>&quot;Cambodia&quot;</value>
              <value>&quot;China&quot;</value>
              <value>&quot;Hong Kong&quot;</value>
              <value>&quot;India&quot;</value>
              <value>&quot;Indonesia&quot;</value>
              <value>&quot;Iran&quot;</value>
              <value>&quot;Israel&quot;</value>
              <value>&quot;Japan&quot;</value>
              <value>&quot;Jordan&quot;</value>
              <value>&quot;Kuwait&quot;</value>
              <value>&quot;Lebanon&quot;</value>
              <value>&quot;Malaysia&quot;</value>
              <value>&quot;New Zealand&quot;</value>
              <value>&quot;Pakistan&quot;</value>
              <value>&quot;Palestine&quot;</value>
              <value>&quot;Philippines&quot;</value>
              <value>&quot;Saudi Arabia&quot;</value>
              <value>&quot;Singapore&quot;</value>
              <value>&quot;South Korea&quot;</value>
              <value>&quot;Syria&quot;</value>
              <value>&quot;Taiwan&quot;</value>
              <value>&quot;Thailand&quot;</value>
              <value>&quot;Turkey&quot;</value>
              <value>&quot;United Arab Emirates&quot;</value>
              <value>&quot;Vietnam&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Europe&quot;'>
              <value>&quot;Austria&quot;</value>
              <value>&quot;Belarus&quot;</value>
              <value>&quot;Belgium&quot;</value>
              <value>&quot;Bulgaria&quot;</value>
              <value>&quot;Chile&quot;</value>
              <value>&quot;Croatia&quot;</value>
              <value>&quot;Cyprus&quot;</value>
              <value>&quot;Czech Republic&quot;</value>
              <value>&quot;Denmark&quot;</value>
              <value>&quot;Finland&quot;</value>
              <value>&quot;France&quot;</value>
              <value>&quot;Georgia&quot;</value>
              <value>&quot;Germany&quot;</value>
              <value>&quot;Greece&quot;</value>
              <value>&quot;Hungary&quot;</value>
              <value>&quot;Iceland&quot;</value>
              <value>&quot;Ireland&quot;</value>
              <value>&quot;Italy&quot;</value>
              <value>&quot;Luxembourg&quot;</value>
              <value>&quot;Netherlands&quot;</value>
              <value>&quot;Norway&quot;</value>
              <value>&quot;Poland&quot;</value>
              <value>&quot;Portugal&quot;</value>
              <value>&quot;Romania&quot;</value>
              <value>&quot;Russia&quot;</value>
              <value>&quot;Serbia&quot;</value>
              <value>&quot;Slovenia&quot;</value>
              <value>&quot;Soviet Union&quot;</value>
              <value>&quot;Spain&quot;</value>
              <value>&quot;Sweden&quot;</value>
              <value>&quot;Switzerland&quot;</value>
              <value>&quot;Ukraine&quot;</value>
              <value>&quot;United Kingdom&quot;</value>
              <value>&quot;West Germany&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
        <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
        <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
        <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='40070' id='1' name='Number of Movies per Countries' w='36128' x='905' y='25203'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
        <zone h='23113' id='2' mode='checklist' name='Number of Movies per Countries' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Country (group)]' show-exclude='false' type-v2='filter' values='relevant' w='10314' x='37696' y='43554'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
        <zone h='13357' id='3' mode='checklist' name='Number of Movies per Countries' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' show-exclude='false' type-v2='filter' values='relevant' w='9650' x='37937' y='30778'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
        <zone h='40302' id='9' name='Number of Titles over the Time' w='50543' x='48372' y='25319' />
        <zone h='7433' id='10' name='Number of Titles over the Time' pane-specification-id='0' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' type-v2='color' w='8444' x='51628' y='29849' />
        <zone h='34030' id='11' name='Top 5 Country' w='38239' x='60796' y='65505' />
        <zone h='30430' id='12' name='Type' w='23643' x='35947' y='66551' />
        <zone h='33333' id='13' name='Top 5 Rating' w='31484' x='905' y='65970' />
        <zone h='14634' id='14' name='Description' w='31303' x='67853' y='10105' />
        <zone h='6852' id='15' mode='dropdown' name='Description' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' type-v2='filter' w='10977' x='844' y='10221' />
        <zone h='14286' id='16' name='Cast' w='25030' x='40893' y='10337' />
        <zone h='6969' id='17' name='Duration' w='10856' x='905' y='16492' />
        <zone h='10918' id='18' name='Director' w='13450' x='27563' y='11614' />
        <zone h='9408' id='19' name='Release Year' w='14596' x='13028' y='12195' />
        <zone h='6504' id='21' is-scaled='1' param='C:/Users/Asus/Downloads/Logonetflix.png' type-v2='bitmap' w='26071' x='35244' y='3484' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Semibold' fontsize='22'>Netflix Title Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2200' minheight='2200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='22' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='52' h='6504' id='21' is-fixed='true' is-scaled='1' param='C:/Users/Asus/Downloads/Logonetflix.png' type-v2='bitmap' w='26071' x='35244' y='3484'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6852' id='15' mode='dropdown' name='Description' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' type-v2='filter' w='10977' x='844' y='10221'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='117' h='14634' id='14' is-fixed='true' name='Description' w='31303' x='67853' y='10105'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='114' h='14286' id='16' is-fixed='true' name='Cast' w='25030' x='40893' y='10337'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='87' h='10918' id='18' is-fixed='true' name='Director' w='13450' x='27563' y='11614'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='75' h='9408' id='19' is-fixed='true' name='Release Year' w='14596' x='13028' y='12195'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='56' h='6969' id='17' is-fixed='true' name='Duration' w='10856' x='905' y='16492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23113' id='2' mode='checkdropdown' name='Number of Movies per Countries' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Country (group)]' show-exclude='false' type-v2='filter' values='relevant' w='10314' x='37696' y='43554'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#000000' />
                  </zone-style>
                </zone>
                <zone h='13357' id='3' mode='checkdropdown' name='Number of Movies per Countries' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' show-exclude='false' type-v2='filter' values='relevant' w='9650' x='37937' y='30778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#000000' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40070' id='1' is-fixed='true' name='Number of Movies per Countries' w='36128' x='905' y='25203'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#000000' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40302' id='9' is-fixed='true' name='Number of Titles over the Time' w='50543' x='48372' y='25319'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7433' id='10' name='Number of Titles over the Time' pane-specification-id='0' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' type-v2='color' w='8444' x='51628' y='29849'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='272' h='34030' id='11' is-fixed='true' name='Top 5 Country' w='38239' x='60796' y='65505'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33333' id='13' is-fixed='true' name='Top 5 Rating' w='31484' x='905' y='65970'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='244' h='30430' id='12' is-fixed='true' name='Type' w='23643' x='35947' y='66551'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BBA98A74-3416-4352-B605-8B43DF0489C7}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{669FF5C7-2745-48F2-8CDC-3EEC657D6C9A}' />
    </window>
    <window class='worksheet' name='Top 5 Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B9633C45-ED0D-47E1-ACAA-FC169A91F718}' />
    </window>
    <window class='worksheet' name='Top 5 Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[__tableau_internal_object_id__].[cnt:netflix!titles!processes_052D2DE3DBF240868D3FA216C3618269:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{93F1F4AD-EEB5-4C8B-A68D-A63037AE7313}' />
    </window>
    <window class='worksheet' name='Number of Movies per Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[Country (group)]' type='filter' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A6FA0231-541A-4C0B-A442-095C9A48D9BB}' />
    </window>
    <window class='worksheet' name='Number of Titles over the Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BB47D583-4AD0-4BCD-A1F2-E8ACF9196275}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cast'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Description'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Director'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Duration'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of Movies per Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of Titles over the Time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Release Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 Rating'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Type'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E79D5631-08B9-4A2F-9CAA-5C8E1E2FF07A}' />
    </window>
    <window class='worksheet' name='Description' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{8FD89ACE-7BAF-487C-8B00-E4BBB528CBDD}' />
    </window>
    <window class='worksheet' name='Cast' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{5283CAEE-DD8D-4CA8-AE57-6DEC9D216701}' />
    </window>
    <window class='worksheet' name='Duration' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{CDC741EE-7D2C-4E4E-A9BB-AE85FED49305}' />
    </window>
    <window class='worksheet' name='Release Year' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{971675D2-D6A8-43C7-97B8-2D2E1D2BFD84}' />
    </window>
    <window class='worksheet' name='Director' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1rwtq0d0cvmlzm16mz0mo1drae6p].[none:title:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{7F642D29-44D7-4671-B18A-1326B8E979F1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cast' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Description' width='192'>
      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
      zRcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Director' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAD5UlEQVR4nO3V32oXdBzG8Wfbb9O5/TYzE7GJZFKoeVBkWIoRCZYQQRCedFDHQd1C3UGX
      0GGnHYpUYIRHQpRQUKiQ0yScczP/pO3XPYg44nm9ruD5fOHNd2w0Go0CpQZJsrCwkNXV1fXe
      Ao/dIElWV1ezsrKy3lvgsRtf7wGwngRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA
      1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQT
      ANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBU
      EwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0A
      VBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBN
      AFQTANUEwKO1eSEfffB+nt+9M7PD+WyYGuTQoYMZzs5kYjDIpunpbN+xI+MTg8zPzWYwOZXh
      7KYkydG33s3bx09k25YtGQzGMzk5mfGNT+TVl/bl+MkP8/Tsxhx+7eVsmh1manIiR44eycxw
      LvNzw4eeO3hUd0OSZHwy0xsms5axnHjvZJ4cX8rlpfs5vG1n1tbuZ+r6lazObc2evaPcWbqS
      PQeOZP9z2/PF559l7N+7+eb0qRzcfyCDZ7dm4+ZdOXX6dKa3vJLb1/7MvmPv5NYfv+TTTz7O
      zcsX8tu1G9m6Y3feeHFXvvzq64eb+4jPp92Duzn7w/e5eGU5Y/du5tr11azcupPxB7dzdXEx
      Z86ey8rycpau38hwOJPFS7/nzHff5u/7yb0HY3n9zWO5+NdSnnrmQGam1pIkt/5Jrl44l+GG
      ifz062LOn/85Z8/9mOXlm9n7wr5cvHApYw85d2w0Go3m5+ezsrLy6B4B/if8AFQTANUEQDUB
      UE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1
      AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRA
      NQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUE
      QDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDV
      BEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQ7T9m14Oz05L+tQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of Movies per Countries' width='192'>
      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
      cA2D2f176b7vToJSBWPDBuJhlZW+koWK1AClUoloNNoyA3zfR1VVEonEmqVBrxZNOjM0nofr
      uksO6mYLqubvo6OjpNNp+vr6mJiYWHZVb+4Yvu8zPDzcSox1dHQwOztLvV5vvT49PT1vVxGS
      xEG7yohjLrqmJMv4po8Qjf9vtxyOKAqKqnJocoYNc1Ehc/I85uR5AKZeeQ64gtKIl4OFfH9T
      UzieSdI3k0dRBKG+PrLPv4BdNpl5ex8bii4jyaUJV6GaySYb+gKJ/dhMJhu1qMlk42FFo1Gi
      0YZkeblcJpvNkkgkiEaj71tTSNM0uroa8XMhBJZlLXmcbdsoijLv9Vwuh6ZpDA4Ocv78+UWT
      IBKJkEqlmJ6ennee53nk83nS6TTVapWJiQl0Xaevrw/TNFv5A1XT+FZldtGO1AyLyrLcykEA
      DBgDRFWVyUqdlSDfuGHzH41PT82rxlkLEELgex67ZyvoUzncmkl9cgrPapQ9+pZNh6RyyDOx
      1fnzPAgCHqzDI3qCTlnlaa9CsELTak3TCIVC5PN5LMtC07RVFOuvPQRBwMTEBLlcjlKpRK1W
      W/I4WZbRdX1RNMfzPGq1GkNDQ6iq2soSJ5NJwuEwExMTy7JE0+l0a7fxPK/1e09PD7Isk0wm
      qdVqLd+k/TNDw3RtD71qmkYkEmGsXEPyPLZ1pZe8F6nHEijW6prIXW2QFYWnhMWY21hRFpLg
      opLMQ46CN0fThcaDMmoWNygNPf7zdh07srI2fyzdze987tOsW7eOrq4uVFUlCAIqlQq5XI5s
      NovrumiRJJ//3Kff25t+j7Eaf8fzvFbR/ULYts2ZM2fQdZ3BwUH6+voQQpDNZle8ptP2HTVR
      q9UYGRlBCEGtVlsxe7zc9XxJ5jsnRtk7unSgR5rMGPjhtUn6EkIwHTP4qmbxjFUk69mtvzcH
      9C1qmN+uyWwsmdyUr/PRosvHbYWC77HfrvDNoHJRvk9pZpygVke4je3VdV0syyKRSCDLMrFY
      DNM0qRamGTs3imSZazZyFApdXNbxYl03gyBgdHQU3/cZHx8nn89f9JorPadarbasst9yKBaL
      LUKdkCSePD68pAyV8n7Yxl1d4zUdXrVNdtXq3C6H6FIuSK1s0sJsDC58sS+oNrt++5f4qyd/
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Titles over the Time' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='187' name='Top 5 Country' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='187' name='Top 5 Rating' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
